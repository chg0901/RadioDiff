%% Enhanced RadioDiff System Architecture - 16:9 aspect ratio
%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#1e88e5', 'primaryTextColor': '#ffffff', 'primaryBorderColor': '#0d47a1', 'lineColor': '#757575', 'secondaryColor': '#43a047', 'tertiaryColor': '#fb8c00', 'background': '#f5f5f5'}}}%%
graph TB
    subgraph "üì° <b><font color=#1e88e5>INPUT DATA PIPELINE</font></b>"
        A[<b>RadioMapSeer Dataset</b><br/><font color=#666>320√ó320 Radio Maps</font><br/><i>Real-world pathloss data</i>] --> B[<b>RadioUNet_c Loader</b><br/><font color=#666>batch_size: 66</font><br/><i>DPM simulation integration</i>]
        B --> C[<b>Gradient Accumulation</b><br/><font color=#666>8 steps ‚Üí Effective: 528</font><br/><i>Memory optimization</i>]
        C --> D[<b>Input Tensors</b><br/><font color=#666>image: B√ó1√ó320√ó320</font><br/><font color=#666>cond: B√ó3√ó320√ó320</font><br/><i>Normalized inputs</i>]
    end
    
    subgraph "üéØ <b><font color=#43a047>FIRST STAGE: VAE ENCODER</font></b>"
        E[<b>AutoencoderKL</b><br/><font color=#666>embed_dim: 3</font><br/><i>Kullback-Leibler divergence</i>] --> F[<b>Encoder Network</b><br/><font color=#666>ResNet Architecture</font><br/><i>Multi-scale feature extraction</i>]
        F --> G[<b>Latent Space z</b><br/><font color=#666>z~q_œÜ(z|x)</font><br/><font color=#666>Shape: [B, 3, 80, 80]</font><br/><i>16√ó compression ratio</i>]
        G --> H[<b>Compression Benefits</b><br/><font color=#666>320√ó320 ‚Üí 80√ó80</font><br/><i>Computational efficiency</i>]
    end
    
    subgraph "üîÑ <b><font color=#fb8c00>SECOND STAGE: CONDITIONAL U-NET</font></b>"
        I[<b>Conditional U-Net</b><br/><font color=#666>dim: 128</font><br/><i>Noise prediction network</i>] --> J[<b>Time Embedding</b><br/><font color=#666>Sinusoidal Encoding</font><br/><i>Positional information</i>]
        J --> K[<b>Condition Integration</b><br/><font color=#666>Swin Transformer</font><br/><i>Window-based attention</i>]
        K --> L[<b>Multi-scale Features</b><br/><font color=#666>dim_mults: [1,2,4,4]</font><br/><i>Hierarchical processing</i>]
        L --> M[<b>Adaptive FFT Module</b><br/><font color=#666>Fourier Scale: 16</font><br/><i>Frequency domain enhancement</i>]
        M --> N[<b>Noise Prediction</b><br/><font color=#666>Œµ_Œ∏(x_t, t, c)</font><br/><i>Knowledge-aware objective</i>]
    end
    
    subgraph "üåä <b><font color=#e53935>DIFFUSION PROCESS</font></b>"
        O[<b>Forward Diffusion</b><br/><font color=#666>q(x_t|x_0) = ùí©(‚àöŒ±ÃÑ_tx_0, (1-Œ±ÃÑ_t)ùêà)</font><br/><i>Noise addition process</i>] --> P[<b>Noise Schedule</b><br/><font color=#666>Œ≤_t: linear 0.0001‚Üí0.02</font><br/><i>1000 timesteps</i>]
        P --> Q[<b>Reverse Process</b><br/><font color=#666>p_Œ∏(x_0|x_t, c)</font><br/><i>Denoising with conditioning</i>]
        Q --> R[<b>Knowledge-Aware Objective</b><br/><font color=#666>pred_KC</font><br/><i>Radio propagation physics</i>]
    end
    
    subgraph "‚öôÔ∏è <b><font color=#8e24aa>TRAINING LOOP</font></b>"
        S[<b>L2 Loss Computation</b><br/><font color=#666>‚Ñí = ||Œµ - Œµ_Œ∏||¬≤</font><br/><i>Mean squared error</i>] --> T[<b>Backpropagation</b><br/><font color=#666>Gradient Clipping: 1.0</font><br/><i>Stable training</i>]
        T --> U[<b>AdamW Optimizer</b><br/><font color=#666>lr: 5e-5, wd: 1e-4</font><br/><i>Weight decay regularization</i>]
        U --> V[<b>Cosine LR Schedule</b><br/><font color=#666>lr(t) = max(5e-6, 5e-5√ó(1-t/T)^0.96)</font><br/><i>Learning rate decay</i>]
        V --> W[<b>EMA Model Update</b><br/><font color=#666>Œ≤: 0.999</font><br/><i>Exponential moving average</i>]
    end
    
    D --> E
    G --> I
    N --> S
    R --> S
    
    %% Style definitions with enhanced colors
    style A fill:#E3F2FD,stroke:#1976D2,stroke-width:3px,color:#000000
    style E fill:#E8F5E8,stroke:#388E3C,stroke-width:3px,color:#000000
    style I fill:#FFF3E0,stroke:#F57C00,stroke-width:3px,color:#000000
    style O fill:#FFEBEE,stroke:#D32F2F,stroke-width:3px,color:#000000
    style S fill:#F3E5F5,stroke:#7B1FA2,stroke-width:3px,color:#000000
    
    %% Add mathematical annotations
    classDef mathBox fill:#FFF9C4,stroke:#F57F17,stroke-width:2px,color:#000000
    class G,R,S mathBox